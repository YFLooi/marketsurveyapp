version: "2"
services:    
    client:        
        image: webapp-client        
        restart: always        
        ports:            
            - "3000:3000"        
        volumes:            
            - ./client:/client            
            - /client/node_modules        
        links: #deprecated. Define "networks" instead
            - api        
        networks: webappnetwork #Plain wrong! It's more complicated than this: https://docs.docker.com/compose/compose-file/#networks
    api:        
        image: webapp-api        
        restart: always        
        ports:            
            - "9000:9000" #why not same as port 80 specified in api's Dockerfile?
        volumes:            
            - ./api:/api            
            - /api/node_modules        
        depends_on:            
            - mongodb        
        networks: webappnetwork

useful config.yml jobs:
    - run: #install dockerize to wait for dependencies to load
        name: install dockerize
        command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
        environment:
            DOCKERIZE_VERSION: v0.3.0
    - run: #use dockerize to wait for psql to be ready
        name: Wait for Heroku PSQL db
        command: dockerize -wait tcp://localhost:5432 -timeout 1m
    - run:
        name: Install Docker Compose
        command: |
          set -x
          curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
          chmod +x ~/docker-compose
          sudo mv ~/docker-compose /usr/local/bin/docker-compose
    - run:
        name: Builds containers and verify it is working. Must do before heroku container:push web.
        command: |
          set -x
          docker-compose up -d
          docker run --network container:api \
            appropriate/curl --keepalive-time 60 --retry 10 --retry-delay 1 --retry-connrefused http://localhost:5000/
          docker run --network container:client \
            appropriate/curl --keepalive-time 60 --retry 10 --retry-delay 1 --retry-connrefused http://localhost:3000/
          docker ps -a
          docker network ls
    - run:
        name: Install Docker client
        command: |
          set -x
          VER="17.03.0-ce"
          curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
          tar -xz -C /tmp -f /tmp/docker-$VER.tgz
          sudo mv /tmp/docker/* /usr/bin
