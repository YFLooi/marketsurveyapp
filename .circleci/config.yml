#Source: https://circleci.com/docs/2.0/deployment-examples/#heroku
version: 2.1 #allows CircleCI to point out version-specific errors

workflows: #Defined set of rules for defining a collection of jobs and their run order
    build-and-test: #Condition for Github to accept push
        jobs:
          - build-and-test

#github requires both 'build-and-test' and 'build' run before approving pull requests...
jobs:
    build-and-test: #runs with all workflows
        working_directory: ~/marketsurveyapp # name of root directory where steps will run
        steps: #collection of executable commands.
            - checkout #check out source code to working directory
            - run: #Required to run tests
                name: Install client packages  
                command: cd client && npm install 
            - run: 
                name: Run tests
                command: cd client && npm test
            - setup_remote_docker #Removes need for Docker daemon. Prevents error on CircleCI build process: Cannot connect to the Docker daemon at unix:///var
            - run:
                name: Install Docker Compose
                command: |
                    set -x
                    curl -L https://github.com/docker/compose/releases/download/1.25.3/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
                    chmod +x ~/docker-compose
                    sudo mv ~/docker-compose /usr/local/bin/docker-compose
            - run:
                name: Builds and deploys containers
                command: |
                    set -x
                    docker-compose build
                    docker-compose up -d
            - run:
                name: Checks available containers and networks
                command: |
                  docker ps -a
                  docker network ls
            - deploy: # From https://medium.com/nexton/deploying-docker-images-to-heroku-with-circleci-713c764e248d
                name: Build and push Docker image to Heroku
                #"sudo curl ~~install.sh" installs Heroku cli
                #"heroku stack:set container" sets stack of Heroku app to container
                #"heroku container:push" looks for the Dockerfiles.processType from the root folder to build images of them
                command: |
                    docker-compose up --build
                    sudo curl https://cli-assets.heroku.com/install.sh | sh 
                    HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
                    HEROKU_API_KEY=${HEROKU_TOKEN} heroku stack:set container -a marketsurveyapp  
                    HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push web
                    HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a marketsurveyapp web

